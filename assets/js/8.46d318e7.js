(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{243:function(t,e,s){t.exports=s.p+"assets/img/d9aa35df-ef6a-4c01-8394-f566ea72f090.9d41b0d3.png"},244:function(t,e,s){t.exports=s.p+"assets/img/552a5692-f05a-40d6-a81a-5a1f7324d12f.fd5354cd.png"},245:function(t,e,s){t.exports=s.p+"assets/img/c41b4489-4932-4763-9c17-905bdcc3db6d.21491193.png"},246:function(t,e,s){t.exports=s.p+"assets/img/1555247b-3951-4cbd-8024-3d61ed927b93.880844c2.png"},610:function(t,e,s){"use strict";s.r(e);var n=[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"audio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#audio","aria-hidden":"true"}},[this._v("#")]),this._v(" Audio")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("HTML5 "),e("code",[this._v("<audio>")]),this._v(" 元素用于在文档中表示音频内容。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(243),alt:"AudioContext"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"audiocontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#audiocontext","aria-hidden":"true"}},[this._v("#")]),this._v(" AudioContext")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" audioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AudioContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webkitAudioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("属性")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("table",[e("thead",[e("tr",[e("th",[this._v("属性")]),this._v(" "),e("th",[this._v("说明")])])]),this._v(" "),e("tbody",[e("tr",[e("td",[this._v("destination")]),this._v(" "),e("td",[this._v("返回 AudioDestinationNode 对象，表示 AudioContext 中所有节点的最终节点，一般表示音频渲染设备。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("方法")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("createBufferSource()")]),t._v(" "),s("td",[t._v("创建一个 AudioBufferSourceNode 对象，他可以通过 AudioBuffer 对象来播放和处理包含在内的音频数据。")])]),t._v(" "),s("tr",[s("td",[t._v("createGain()")]),t._v(" "),s("td",[t._v("创建一个 GainNode，它可以控制音频的总音量。")])]),t._v(" "),s("tr",[s("td",[t._v("createBiquadFilter()")]),t._v(" "),s("td",[t._v("创建一个 BiquadFilterNode，它代表一个双二阶滤波器，可以设置集中不同且常见滤波器类型：高通、低通、带通等。")])]),t._v(" "),s("tr",[s("td",[t._v("createOscillator()")]),t._v(" "),s("td",[t._v("创建一个 OscillatorNode，它表示一个周期性波形，基本上来说创造了一个音调。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"音频转换成buffer格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#音频转换成buffer格式","aria-hidden":"true"}},[this._v("#")]),this._v(" 音频转换成Buffer格式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用 "),e("code",[this._v("decodeAudioData()")]),this._v(" 方法把音频文件编译成 buffer 格式。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeAudioData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arraybuffer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeAudioData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error decoding file data: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BufferLoader: XHR error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeAudioData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("audioContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sounds/music.mp3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"audionode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#audionode","aria-hidden":"true"}},[this._v("#")]),this._v(" AudioNode")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("connect()")]),t._v(" "),s("td",[t._v("链接两个 "),s("strong",[t._v("AudioNode")]),t._v(" 节点，把音频从一个 "),s("strong",[t._v("AudioNode")]),t._v(" 节点输出到另一个 "),s("strong",[t._v("AudioNode")]),t._v(" 节点，形成一个音频通道。")])]),t._v(" "),s("tr",[s("td",[t._v("disconnect()")]),t._v(" "),s("td",[t._v("把 "),s("strong",[t._v("AudioNode")]),t._v(" 节点与其他节点断开链接。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"audiobuffersourcenode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#audiobuffersourcenode","aria-hidden":"true"}},[this._v("#")]),this._v(" AudioBufferSourceNode")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("音频源有多种，这里只介绍 "),s("strong",[t._v("buffer")]),t._v(" 的音频源，"),s("strong",[t._v("buffer")]),t._v(" 的音频源通过 "),s("strong",[t._v("AudioContext")]),t._v(" 接口的 "),s("strong",[t._v("createBufferSource")]),t._v(" 方法来创建。音频源节点继承 "),s("strong",[t._v("AudioNode")]),t._v(" 音频节点。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let bufferSource = audioContext.createBufferSource();\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("创建了 "),s("strong",[t._v("AudioBufferSourceNode")]),t._v(" 对象后，把 "),s("strong",[t._v("buffer")]),t._v(" 格式的音频数据赋值给 "),s("strong",[t._v("AudioBufferSourceNode")]),t._v(" 对象的 "),s("strong",[t._v("buffer")]),t._v(" 属性，此时音频已经传递到音频源，可以对音频进行处理或输出。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("bufferSource.buffer = buffer;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("AudioBufferSourceNode.start(when[, duration])")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("when：延迟播放时间，单位为秒。")]),this._v(" "),e("li",[this._v("offset：定位音频到第几秒开始播放。")]),this._v(" "),e("li",[this._v("duration：从开始播放结束时长，当经过设置秒数后自动结束音频播放。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("AudioBufferSourceNode.stop([when])")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("when：延迟停止时间，单位为秒。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("停止播放，注意调用该方法后，无法再次调用 "),e("strong",[this._v("AudioBufferSourceNode.start")]),this._v(" 播放。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"audiodestinationnode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#audiodestinationnode","aria-hidden":"true"}},[this._v("#")]),this._v(" AudioDestinationNode")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("音频终点是通过 "),e("strong",[this._v("AudioContext")]),this._v(" 接口的 "),e("strong",[this._v("destination")]),this._v(" 属性访问的。音频终点继承 "),e("strong",[this._v("AudioNode")]),this._v(" 音频节点，")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("AudioDestinationNode")]),this._v(" 节点无法再把音频信息传递给下一个音频节点，即无法再链接其他音频节点，因为他已经是终点，没有输出，也可以理解为他自己就是输出。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let audioDestinationNode = audioContext.destination;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("此时我们有音频起点 "),e("strong",[this._v("AudioBufferSourceNode")]),this._v(" 和音频终点 "),e("strong",[this._v("AudioDestinationNode")]),this._v(" ，使用 "),e("strong",[this._v("AudioNode.connect()")]),this._v(" 方法把起点和终点链接起来，就形成了一条有输入输出的音频通道，可以把音频直接播放出来。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("bufferSource.connect(audioDestinationNode);\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"gainnode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gainnode","aria-hidden":"true"}},[this._v("#")]),this._v(" GainNode")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("用于音量变化。它是一个 "),e("strong",[this._v("AudioNode")]),this._v(" 类型的音频处理模块。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let gainNode = audioContext.createGain();\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("bufferSource.connect(gainNode);\ngainNode.connect(audioDestinationNode);\n\nlet controlVolume = value => {\n    gainNode.gain.value = value);\n}\n\n// 两倍音量播放\ncontrolVolume(2);\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(244),alt:"audiocontext2"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"biquadfilternode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biquadfilternode","aria-hidden":"true"}},[this._v("#")]),this._v(" BiquadFilterNode")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("表示一个简单的低频滤波器，可控制声调。它是一个 "),e("strong",[this._v("AudioNode")]),this._v(" 类型的音频处理模块。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let filterNode = audioContext.createBiquadFilter();\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("bufferSource.connect(filterNode);\nfilterNode.connect(audioDestinationNode);\n\nlet controlFrequency = function(value) {\n    filterNode.frequency.value = value;\n}\n\n// 音频为1000变调\ncontrolFrequency(1000);\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"多个音频源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多个音频源","aria-hidden":"true"}},[this._v("#")]),this._v(" 多个音频源")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(245),alt:"audiocontext3"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"多个音频处理模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多个音频处理模块","aria-hidden":"true"}},[this._v("#")]),this._v(" 多个音频处理模块")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(246),alt:"audiocontext4"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("参考资料：")])])}],a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("HTML5 音频 API 的主要框架和工作流程如下图，在 AudioContext 音频上下文中，把音频文件转成 buffer 格式，从音频源 source 开始，经过 AuidoNode 处理音频，最好到达 destination 输出音乐。这里形成了一个音频通道，每个模块通过 connect 方法链接并传送音频。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("通过全局的 AudioContext 能获取当前网页音频上下文。")]),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),s("p",[t._v("音频节点接口是一个音频处理模块。包括音频源，音频输出，中间处理模块。")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),s("p",[t._v("开始播放。")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),s("p",[s("a",{attrs:{href:"https://codepen.io/leechikit/pen/KvaJRp",target:"_blank",rel:"noopener noreferrer"}},[t._v("戳我看栗子"),s("OutboundLink")],1),t._v("点击预览。")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),s("p",[t._v("把音频源、音频输出和音频处理模块链接一起，形成可控制音量大小的音频。")]),t._v(" "),t._m(35),t._m(36),t._v(" "),s("p",[s("a",{attrs:{href:"https://codepen.io/leechikit/pen/vJxewz",target:"_blank",rel:"noopener noreferrer"}},[t._v("戳我看栗子"),s("OutboundLink")],1),t._v("点击预览")]),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),s("p",[t._v("输出一个变调的音频：")]),t._v(" "),t._m(40),t._m(41),t._v(" "),s("p",[t._v("在一个音频上下文中，可以有多个音频处理通道，即多个音频源同时输出。各个音频处理通道内的操作是独立的，不影响其他音频通道。")]),t._v(" "),t._m(42),t._v(" "),s("p",[s("a",{attrs:{href:"https://codepen.io/leechikit/pen/KvWyPV",target:"_blank",rel:"noopener noreferrer"}},[t._v("戳我看栗子"),s("OutboundLink")],1),t._v("点击预览")]),t._v(" "),t._m(43),t._v(" "),s("p",[t._v("一个音频源可以经过多个音频处理模块处理，音频处理模块叠加效果后输出。")]),t._v(" "),t._m(44),t._v(" "),s("hr"),t._v(" "),t._m(45),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000010561222",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML5 音频 API Web Audio"),s("OutboundLink")],1)])])])},n,!1,null,null,null);e.default=r.exports}}]);