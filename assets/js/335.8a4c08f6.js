(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{302:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"number-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-对象","aria-hidden":"true"}},[t._v("#")]),t._v(" Number 对象")]),t._v(" "),a("p",[t._v("JavaScript中的 "),a("code",[t._v("Number")]),t._v(" 对象，是原始数值的对象表示。")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("ul",[a("li",[t._v("充当 "),a("code",[t._v("Number")]),t._v(" 对象的"),a("strong",[t._v("构造函数")]),t._v("使用，用于结合 "),a("code",[t._v("new")]),t._v(" 关键字构造一个表示数值的 "),a("code",[t._v("Number")]),t._v(" 对象。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("当作"),a("strong",[t._v("普通函数")]),t._v("使用，将其它数据类型转换为 Number 数据类型的原始数值。简而言之，这是一个类型转换函数。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("value")])]),t._v(" "),a("td",[t._v("可选，任意类型")]),t._v(" "),a("td",[t._v("表示数字的任意值，默认为 0。")])])])]),t._v(" "),a("p",[t._v("如果参数 "),a("code",[t._v("value")]),t._v(" 无法正常转换为数字，则返回 "),a("code",[t._v("NaN")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值","aria-hidden":"true"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("ul",[a("li",[t._v("如果 "),a("code",[t._v("Number()")]),t._v(" 函数被当做 "),a("code",[t._v("Number")]),t._v(" 对象的构造函数来使用，则以 "),a("code",[t._v("new")]),t._v(" 关键字构造一个新的 "),a("code",[t._v("Number")]),t._v(" 对象（Number 类型）。该 "),a("code",[t._v("Number")]),t._v(" 对象表示参数所指定的数值。")]),t._v(" "),a("li",[t._v("如果 "),a("code",[t._v("Number()")]),t._v(" 函数被当作普通函数使用，则返回转换后的 Number 数据类型的数值。")])]),t._v(" "),a("p",[a("em",[t._v("注意")]),t._v("：大多数时候，你无需显示地通过 "),a("code",[t._v("new")]),t._v(" 关键字来构造一个 "),a("code",[t._v("Number")]),t._v(" 对象，因为在 JavaScript 中，Number 对象和 Number 数据类型是相通的，你可以在 Number 数据类型的变量上直接使用 Number 对象的所有属性和方法（相关示例见下面）。")]),t._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("释义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.EPSILON")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示1和大于1的最小值（可表示为 Number）的差值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.MAX_SAFE_INTEGER")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示在 JavaScript 中最大的安全整数 (253 - 1)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.MAX_VALUE")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示在 JavaScript 中的最大数值。最小的负数是 "),a("code",[t._v("-MAX_VALUE")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.MIN_VALUE")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("能表示的最小正数即最接近 0 的正数 (实际上不会变成 0)。最大的负数是 -"),a("code",[t._v("MIN_VALUE")]),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.NaN")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("特殊的“非数字”值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.NEGATIVE_INFINITY")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("特殊的负无穷大值，在溢出时返回该值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.POSITIVE_INFINITY")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("特殊的正无穷大值，在溢出时返回改值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示 Number 构造函数的原型。")])])])]),t._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("释义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.isNaN()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("确定传递的值是否是 "),a("code",[t._v("NaN")]),t._v(" 和其类型时 Number。它是原始的全局 "),a("code",[t._v("isNaN()")]),t._v(" 的更强大的版本。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.isFinite()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("用于检测传入的参数是否时一个有穷数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.isInteger()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("用来判断传入的参数是否为整数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.isSafeInteger()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("确定传递的值是否为安全整数 ( -(253 - 1) 至 253 - 1之间)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.parseFloat()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("把一个字符串解析为浮点数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.parseInt()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("根据给定的进制数把一个字符串解析成整数。")])])])]),t._v(" "),a("h2",{attrs:{id:"number-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-实例","aria-hidden":"true"}},[t._v("#")]),t._v(" Number 实例")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("释义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.toExponential()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("以指数表示法返回该数值字符串表示形式。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.toFixed()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("使用定点表示法来格式化一个数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.toLocaleString()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回这个数字在特定语言环境下的表示字符串。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.toPrecision()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("以指定的精度返回该数值对象的字符串表示。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.toString()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回指定 Number 对象的字符串表示形式。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number.prototype.valueOf()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回一个被 Number 对象包装的原始值。")])])])]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("h3",{attrs:{id:"标准示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准示例")]),t._v(" "),a("ul",[a("li",[t._v("构造新的 Number 对象")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lamborghini "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" porsche "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5.3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" maserati "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ferrai "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ferrai"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),a("ul",[a("li",[t._v("将数据转换为 Number 数据类型（是原始数值，不是 Number 对象）")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lamborghini "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" porsche "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5.3"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" maserati "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ferrai "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ferrai"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])])])}],!1,null,null,null);e.default=r.exports}}]);