(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{337:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"词法语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#词法语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 词法语法")]),a._v(" "),t("p",[a._v("ECMAScript 源码文本会被从左到右扫描，并被转换为一系列的输入元素，包括 Token、控制符、行终止符、注释和空白符。")]),a._v(" "),t("p",[a._v("ECMAScript 定义了一些关键字、字面量以及行尾分号补全的规则。")]),a._v(" "),t("h2",{attrs:{id:"字符集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符集","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符集")]),a._v(" "),t("p",[a._v("JavaScript 程序使用 Unicode 字符集编写。Unicode 是 ASCII 和 Latin-1 的超集，并支持地球上几乎所有在使用的语言。ECMAScript3 要求 JavaScript 的实现必须支持 Unicode2.1 及后续版本，ECMAScript5 则要求支持 Unicode3 及后续版本。")]),a._v(" "),t("h3",{attrs:{id:"区分大小写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区分大小写","aria-hidden":"true"}},[a._v("#")]),a._v(" 区分大小写")]),a._v(" "),t("p",[a._v("JavaScript 是区分大小写的语言，也就是说，关键字、变量、函数名和所有的标识符（Identifier）都必须采取一致的大小写的形式。但是需要注意的是，HTML 和 CSS 并不区分大小写（尽管 XHTML 区分大小写），也就是说如果我们在用 JavaScript 控制 HTML 属性的时候对 HTML 来说 id 和 ID 没区别，但是 JavaScript 有区别。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//'abc'、'Abc'、'aBc'、'abC'、'ABC'是五个不同的变量名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" abc "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" Abc "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" aBc "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" abC "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ABC")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("abc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Abc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" aBc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" abC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ABC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1 2 3 4 5")]),a._v("\n")])])]),t("h3",{attrs:{id:"空格、换行符和格式控制符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空格、换行符和格式控制符","aria-hidden":"true"}},[a._v("#")]),a._v(" 空格、换行符和格式控制符")]),a._v(" "),t("p",[a._v("Javascript 会忽略程序中标识（token）之间的空格。多数情况下，Javascript 同样会忽略换行符。由于可以在代码中随意使用空格和换行，因此可以采用整齐、一致的缩进来形成统一的编码风格，从而提高代码的可读性。")]),a._v(" "),t("h4",{attrs:{id:"空白字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空白字符","aria-hidden":"true"}},[a._v("#")]),a._v(" 空白字符")]),a._v(" "),t("p",[t("strong",[a._v("空白字符 WhiteSpace")])]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("\\u0009    水平制表符        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("TAB")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\\u000B    垂直制表符        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("VT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\\u000C    换页符            "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("FF")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\\u0020    空格符            "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\\u00A0    非中断空格符      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("NBSP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\\uFEFF    字符序标记\n")])])]),t("h4",{attrs:{id:"行终止符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行终止符","aria-hidden":"true"}},[a._v("#")]),a._v(" 行终止符")]),a._v(" "),t("p",[t("strong",[a._v("行终止符 LineTerminator")])]),a._v(" "),t("div",{staticClass:"language-javascirpt extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\\u000A    换行符        <LF>\n\\u000D    回车符        <CR>\n\\u2028    行分隔符      <LS>\n\\u2029    段落分割符     <PS>\n")])])]),t("p",[a._v("⚠️ "),t("strong",[a._v("注意事项")]),a._v("：回车符加换行符在一起被解析成一个单行结束符")]),a._v(" "),t("h3",{attrs:{id:"unicode转义序列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicode转义序列","aria-hidden":"true"}},[a._v("#")]),a._v(" Unicode转义序列")]),a._v(" "),t("p",[a._v("在有些计算机硬件和软件里，无法显示或输入 Unicode 字符全集。为了兼容，JavaScript 定义了一种特殊序列，使用 6 个 ASCII 字符来代表任意 16 位 Unicode 内码。这些 Unicode 转义序列均以 "),t("code",[a._v("\\u")]),a._v(" 为前缀，其后跟随 4 个十六进制数（使用数数字以及大写或小写的字母 A~F 表示），可以用于 JavaScript 直接量、正则表达式和标识符中（关键字除外）。")]),a._v(" "),t("h2",{attrs:{id:"注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),t("p",[a._v("JavaScript 不会执行注释。")]),a._v(" "),t("p",[a._v("我们可以添加注释来对 JavaScript 进行解释，或者提高代码的可读性。")]),a._v(" "),t("h3",{attrs:{id:"单行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单行注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 单行注释")]),a._v(" "),t("p",[a._v("单行注释以两个斜杠开头")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 以下代码为声明变量")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"多行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多行注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 多行注释")]),a._v(" "),t("p",[a._v("多行注释又叫块级注释，以 "),t("code",[a._v("/*")]),a._v(" 开头，以 "),t("code",[a._v("*/")]),a._v(" 结尾。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n以下代码为\n声明变量并\n赋值\n*/")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("块级注释 "),t("code",[a._v("/**/")]),a._v(" 可以跨行书写，但不能嵌套，否则会报错。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//报错")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n注释1\n/*\n注释1.1\n */")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),t("p",[a._v("块级注释 "),t("code",[a._v("/**/")]),a._v(" 中的那些字符也可能出现在正则表达式字面量里，所以块级注释对于被注释的代码块来说是不安全的。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n    var rm_a = /a*/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),t("h3",{attrs:{id:"阻止执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阻止执行","aria-hidden":"true"}},[a._v("#")]),a._v(" 阻止执行")]),a._v(" "),t("p",[a._v("注释可用于阻止其中一条代码行的执行（可用于调试）：")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// var a = 1;")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"行末注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行末注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 行末注释")]),a._v(" "),t("p",[a._v("在下面的例子中，我们把注释放到代码行的结尾处：")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明 x 并把 5 赋值给它")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明 y 并把 x+2 赋值给它")]),a._v("\n")])])]),t("h2",{attrs:{id:"直接量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直接量","aria-hidden":"true"}},[a._v("#")]),a._v(" 直接量")]),a._v(" "),t("p",[a._v("Javascript 数据直接量："),t("strong",[a._v("直接量（Literals）")]),a._v("，又名"),t("strong",[a._v("字面量")]),a._v("，就是可以在程序中直接使用的数据。")]),a._v(" "),t("p",[a._v("主要有以下几种直接量：")]),a._v(" "),t("ul",[t("li",[a._v("空直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v("\n")])])]),t("ul",[t("li",[a._v("布尔直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),t("ul",[t("li",[a._v("数值直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十进制")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1234567890")]),a._v("\n")])])]),t("p",[a._v("⚠️ "),t("strong",[a._v("注意")]),a._v("：十进制数值直接量可以以0开头，但是如果0以后的最高位比8小，数值将会被认为是八进制而不会报错")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 二进制")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0b10000000000000000000000000000000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2147483648")]),a._v("\n")])])]),t("p",[a._v("二进制表示为开头是0后接大写或小写的B（"),t("code",[a._v("0b")]),a._v("或者"),t("code",[a._v("0B")]),a._v("）。如果"),t("code",[a._v("0b")]),a._v("之后有除了0或1以外的数字，将会抛出错误。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 八进制")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0O755")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 493")]),a._v("\n")])])]),t("p",[a._v("进制表示为开头是 0 后接大写或小写的 O（"),t("code",[a._v("0o")]),a._v(" 或 "),t("code",[a._v("0O")]),a._v("）。如果有不在（01234567）中的数字，将会抛出错误。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十六进制")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0xFFFFFFFFFFFFFFFFF")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 295147905179352830000")]),a._v("\n")])])]),t("p",[a._v("十六进制表示为开头是 0 后接大写或小写的 X（"),t("code",[a._v("0x")]),a._v("或"),t("code",[a._v("0X")]),a._v("）。如果有不在（0123456789ABCDEF）中的数字，将会抛出错误。")]),a._v(" "),t("ul",[t("li",[a._v("字符串直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十六进制转义序列")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\xA9'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// "©"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Unicode转义序列")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\u00A9'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// "©"')]),a._v("\n")])])]),t("ul",[t("li",[a._v("对象直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ES6中的简略表示方法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不需要这样")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("数组直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1954")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1974")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1990")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2014")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("ul",[t("li",[a._v("正则表达式直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/ab+c/g")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 一个空的正则表达式直接量")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 必须有一个空的非捕获分组")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 以避免被当成是行注释符号")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),t("ul",[t("li",[a._v("模板字符串直接量")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("`string text`")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("`string text line 1\n string text line 2`")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("`string text ")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[a._v("${")]),a._v("expression"),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[a._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v(" string text`")])]),a._v("\n")])])]),t("h2",{attrs:{id:"标识符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标识符","aria-hidden":"true"}},[a._v("#")]),a._v(" 标识符")]),a._v(" "),t("p",[t("strong",[a._v("标识符")]),a._v("，就是指变量、函数、属性的名字，或者函数的参数。标识符可以是按照下列格式规则组合起来的一或多个字符。")]),a._v(" "),t("ul",[t("li",[a._v("第一个字符必须是一个字母、下划线("),t("code",[a._v("_")]),a._v(")、或一个美元符号("),t("code",[a._v("$")]),a._v(")")]),a._v(" "),t("li",[a._v("其他字符可以是字母、下划线、美元符号或数字")])]),a._v(" "),t("p",[a._v("标识符中的字母也可以包含扩展的 ASCII 或 Unicode 字母字符，但我们不推荐这样做。")]),a._v(" "),t("p",[a._v("按照惯例，ECMAScript 标识符采用驼峰大小写格式，也就是第一个字母小写，剩下的每个单词的首字母大写。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" firstSecond "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" myCar "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Toyota'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("doSomethingImportant")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("虽然没有谁强制要求必须采用这种格式，但为了与 ECMAScript 内置的函数和对象命名格式保持一致，可以将其当作一种最佳实践。")]),a._v(" "),t("p",[a._v("⚠️ "),t("strong",[a._v("注意事项")]),a._v("：不能把关键字、保留字、"),t("code",[a._v("true")]),a._v("、"),t("code",[a._v("false")]),a._v(" 和 "),t("code",[a._v("null")]),a._v(" 用作标识符。")]),a._v(" "),t("h2",{attrs:{id:"关键字和保留字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字","aria-hidden":"true"}},[a._v("#")]),a._v(" 关键字和保留字")]),a._v(" "),t("p",[a._v("和其他任何编程语言一样，Javascript 保留了一些标识符为自己所用。这些保留字不能用做普通的标识符。由于好多参考书的误导，貌似保留字和关键字是分开的，其实并不是，关键字只是保留字的一部分。保留字包括关键字、未来保留字、空字面量和布尔值字面量。")]),a._v(" "),t("h3",{attrs:{id:"保留字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保留字","aria-hidden":"true"}},[a._v("#")]),a._v(" 保留字")]),a._v(" "),t("ul",[t("li",[a._v("关键字 Keyword")]),a._v(" "),t("li",[a._v("未来保留字 FutureReservedWord")]),a._v(" "),t("li",[a._v("空字面量 NullLiteral")]),a._v(" "),t("li",[a._v("布尔值字面量 BooleanLiteral")])]),a._v(" "),t("h3",{attrs:{id:"关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关键字","aria-hidden":"true"}},[a._v("#")]),a._v(" 关键字")]),a._v(" "),t("p",[a._v("以下关键字ES6已实现")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("typeof")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("var")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("continue")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("switch")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("debugger")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("with")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("delete")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("extends")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v("\n")])])]),t("h3",{attrs:{id:"未来保留字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#未来保留字","aria-hidden":"true"}},[a._v("#")]),a._v(" 未来保留字")]),a._v(" "),t("p",[a._v("以上是 ECMAScript6 的保留字，但在 ECMAScript3 版本中的保留字并不一样，若希望代码能在基于 ECMAScript3 实现的解释器上运行的话，应该避免使用以下保留字作为标识符。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("abstract    boolean     byte        char\nconstdouble "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v("        final       float\ngoto        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("int")]),a._v("         interfacelong\nnative      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v("      short       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v("       transient   volatile    synchronized\n")])])]),t("p",[t("strong",[a._v("预定义变量和函数")])]),a._v(" "),t("p",[a._v("此外，Javascript 预定义了很多全局变量和函数，应该避免把它们的名字用做标识符名。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("String      Number      Boolean     Array\nDate        Function    Math        Object\nRegExp      Error       EvalError   "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JSON")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("Infinity")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v("         isNaN       isFinite\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("undefined")]),a._v("   arguments   parseInt    parseFloat\neval        decodeURI   encodeURI   decodeURIComponent\nencodeURIComponent      RangeError  ReferenceError\nTypeError   URIError    SyntaxError\n")])])]),t("h2",{attrs:{id:"分号可选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分号可选","aria-hidden":"true"}},[a._v("#")]),a._v(" 分号可选")]),a._v(" "),t("p",[a._v("Javascript 使用分号 "),t("code",[a._v(";")]),a._v(" 将语句分隔开，这对增强代码的可读性和整洁性是非常重要的。")]),a._v(" "),t("p",[a._v("有些地方可以省略分号，有些地方则不能省略分号。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两条语句用两行书写，第一个分号可以省略")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nb "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//两条语句用一行书写，第一个分号不能省略")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("但 Javascript 并不是在所有换行处都填补分号，只有在缺少了分号就无法正确解析代码时，Javascript 才会填补分号。换句话说，如果当前语句和随后的非空格字符不能当成一个整体来解析的话，Javascript 就在当前语句行结束处填补分号。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a\na\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("Javascript 将其解析为:")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"自动分号补全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动分号补全","aria-hidden":"true"}},[a._v("#")]),a._v(" 自动分号补全")]),a._v(" "),t("p",[a._v("Javascript 并不是在所有换行处都填补分号，只有在缺少了分号就无法正确解析代码时，Javascript 才会填补分号。换句话说，如果当前语句和随后的非空格字符不能当成一个整体来解析的话，Javascript 就在当前语句行结束处填补分号。")]),a._v(" "),t("ul",[t("li",[a._v("当出现一个不允许的行终止符或 "),t("code",[a._v("}")]),a._v(" 时，会在其之前插入一个分号。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将会被 ASI 转换为")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("当捕获到标识符输入流的结尾，并且无法将单个输入流转换为一个完整的程序时，将在结尾插入一个分号。")])]),a._v(" "),t("p",[a._v("在下面这段中，由于在 "),t("code",[a._v("b")]),a._v(" 和 "),t("code",[a._v("++")]),a._v(" 之间出现了一个行终止符，所以 "),t("code",[a._v("++")]),a._v(" 未被当成变量 "),t("code",[a._v("b")]),a._v(" 的后置运算符。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" b\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("c\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将被ASI转换为")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[t("p",[a._v("当语句中包含语法中的限制产品后跟一个行终止符的时候（也就是语句后紧跟着换行），将会在行结尾插入一个分号。带「这里没有行终止符」规则的语句有：")]),a._v(" "),t("ul",[t("li",[a._v("后置运算符（"),t("code",[a._v("++")]),a._v(" 和 "),t("code",[a._v("--")]),a._v("）")]),a._v(" "),t("li",[t("code",[a._v("continue")])]),a._v(" "),t("li",[t("code",[a._v("break")])]),a._v(" "),t("li",[t("code",[a._v("return")])]),a._v(" "),t("li",[t("code",[a._v("yield")]),a._v("、"),t("code",[a._v("yield*")])]),a._v(" "),t("li",[t("code",[a._v("module")])])])])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将被 ASI 转换为")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("x\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("\ny\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 解析为")]),a._v("\nx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 本意")]),a._v("\nx"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("虽然分号不是必须的，但最好不要省略它，因为加上分号可以避免很多错误，代码行结尾处没有分号会导致压缩错误。加上分号也会在某些情况下增进代码的性能，因为这样解析器就不必再花时间推测应该在哪里插入分号了。")])])}],!1,null,null,null);s.default=e.exports}}]);