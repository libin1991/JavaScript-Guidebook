(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{441:function(t,e,s){"use strict";s.r(e);var i=s(0),r=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("SQL 注入，也称为 SQL 隐码或 SQL 注码，是发生于应用程序与数据库层的安全漏洞。简而言之，是在输入的字符串之中注入 SQL 指令，在设计不良的程序单中忽略了字符检查，那么这些注入进去的恶意指令就会被数据库服务器误认为是正常的 SQL 指令而运行，因此遭到破坏或是入侵。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("严格限制 Web 应用的数据库的操作权限，给此用户提供仅仅能够满足其工作的最低权限，从而最大限度的减少注入攻击对数据库的危害。**请记住永远不要使用超级用户或所有者帐号去连接数据库！**当数据库被攻击时将损伤限制在当前表的范围是比较明智的选择。通过权限限制可以防止攻击者获取数据库其它信息，甚至利用数据库执行 Shell 命令等操作。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("hr"),t._v(" "),t._m(12),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.im/post/5bd5b820e51d456f72531fa8",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 安全漏洞之 SQL 注入"),s("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"sql-注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql-注入","aria-hidden":"true"}},[this._v("#")]),this._v(" SQL 注入")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"作用原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 作用原理")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("SQL 命令可查询、插入、更新、删除等，命令的串接。而以分号字符为不同命令的区别。（原本的作用是用于 SubQuery 或作为查询、插入、更新、删除等的条件式）")]),t._v(" "),s("li",[t._v("SQL 命令对于传入的字符串参数是用单引号字符所包起来。（但连续 2 个单引号字符，在 SQL 数据库中，则视为字符串中的一个单引号字符）")]),t._v(" "),s("li",[t._v("SQL 命令中，可以注入注解（连续 2 个减号字符 "),s("code",[t._v("--")]),t._v(" 后的文字为注解，或 "),s("code",[t._v("/*")]),t._v(" 与 "),s("code",[t._v("*/")]),t._v(" 所包起来的文字为注解）")]),t._v(" "),s("li",[t._v("因此，如果在组合 SQL 的命令字符串时，未针对单引号字符作跳脱处理的话，将导致该字符变量在填入命令字符串时，被恶意窜改原本的 SQL 语法的作用。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"可能造成的伤害"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可能造成的伤害","aria-hidden":"true"}},[this._v("#")]),this._v(" 可能造成的伤害")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("数据表中的数据外泄，例如企业及个人机密数据，账户数据，密码等。")]),t._v(" "),s("li",[t._v("数据结构被黑客探知，得以做进一步攻击（例如 SELECT * FROM sys.tables）。")]),t._v(" "),s("li",[t._v("数据库服务器被攻击，系统管理员账户被窜改（例如 ALTER LOGIN sa WITH PASSWORD='xxxxxx'）。")]),t._v(" "),s("li",[t._v("获取系统较高权限后，有可能得以在网页加入恶意链接、恶意代码以及 Phishing 等。")]),t._v(" "),s("li",[t._v('经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统（例如 xp_cmdshell "net stop iisadmin"可停止服务器的 IIS 服务）。')]),t._v(" "),s("li",[t._v("黑客经由上传 php 简单的指令至对方之主机内，PHP 之强大系统命令，可以让黑客进行全面控制系统(例如:php 一句话木马)。")]),t._v(" "),s("li",[t._v('破坏硬盘数据，瘫痪全系统（例如 xp_cmdshell "FORMAT C:"）。')]),t._v(" "),s("li",[t._v("获取系统最高权限后，可针对企业内部的任一管理系统做大规模破坏，甚至让其企业倒闭。")]),t._v(" "),s("li",[t._v("企业网站主页被窜改，门面尽失。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"防御策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 防御策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"数据校验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据校验","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据校验")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("SQL 注入漏洞的主要原因还是没有对用户输入的数据进行过滤，"),e("strong",[this._v("所以对来自用户的数据（GET、POST、Cookie 等）最好做到以下两种过滤校验")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("检查输入的数据是否具有所期望的数据格式。这种在参数是数字的时候特别有效，如果攻击者选择在参数中插入内容的话则会被转换成 "),e("code",[this._v("NaN")]),this._v(" 导致攻击失败。")]),this._v(" "),e("li",[this._v("使用数据库特定的敏感字符转义函数把用户提交上来的非数字数据进行转义。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"权限限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#权限限制","aria-hidden":"true"}},[this._v("#")]),this._v(" 权限限制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"日志处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志处理","aria-hidden":"true"}},[this._v("#")]),this._v(" 日志处理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当数据库操作失败的时候，尽量"),e("strong",[this._v("不要将原始错误日志返回")]),this._v("，比如类型错误、字段不匹配等，把代码里的 SQL 语句暴露出来，以防止攻击者利用这些错误信息进行 SQL 注入。除此之外，在允许的情况下，"),e("strong",[this._v("使用代码或数据库系统保存查询日志")]),this._v("也是一个好办法。显然，日志并不能防止任何攻击，但定期审计数据库执行日志可以跟踪是否存在应用程序正常逻辑之外的 SQL 语句执行。日志本身没用，要查阅其中包含的信息才行。毕竟，更多的信息总比没有要好。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("参考资料：")])])}],!1,null,null,null);e.default=r.exports}}]);