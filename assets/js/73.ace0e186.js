(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{342:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"do-while-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-while-语句","aria-hidden":"true"}},[t._v("#")]),t._v(" do-while 语句")]),t._v(" "),s("p",[s("strong",[t._v("do...while 语句")]),t._v("创建一个执行指定语句的循环，直到 "),s("code",[t._v("condition")]),t._v(" 值为 false。在执行 "),s("code",[t._v("statement")]),t._v(" 后检测 "),s("code",[t._v("condition")]),t._v("，所以指定的 "),s("code",[t._v("statement")]),t._v(" 至少执行一次。")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("statement")])]),t._v(" "),s("td",[t._v("执行至少一次的语句，并在每次 "),s("code",[t._v("condition")]),t._v(" 值为真时重新执行。想执行多行语句，可使用 "),s("code",[t._v("block")]),t._v("语句（"),s("code",[t._v("{ ... }")]),t._v("）包裹这些语句。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("expression")])]),t._v(" "),s("td",[t._v("循环中每次都会计算的表达式。如果 "),s("code",[t._v("condition")]),t._v(" 值为 "),s("code",[t._v("true")]),t._v("，"),s("code",[t._v("statement")]),t._v(" 会再次执行。当 "),s("code",[t._v("condition")]),t._v(" 值为 "),s("code",[t._v("false")]),t._v("，则跳到 "),s("code",[t._v("do...while")]),t._v(" 之后的语句。")])])])]),t._v(" "),s("h3",{attrs:{id:"描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),s("ul",[s("li",[t._v("像 "),s("code",[t._v("do-while")]),t._v(" 这种后测试循环语句最常用于循环体中的代码至少要被执行一次的情形。")]),t._v(" "),s("li",[s("code",[t._v("do/while")]),t._v(" 循环和普通 "),s("code",[t._v("while")]),t._v(" 循环之间有两点语法方面的不同之处。\n"),s("ul",[s("li",[s("code",[t._v("do")]),t._v(" 循环要求必须使用关键字 "),s("code",[t._v("do")]),t._v(" 来标识循环的开始，用 "),s("code",[t._v("while")]),t._v(" 来标识循环的结尾并进入循环条件判断。")]),t._v(" "),s("li",[t._v("和 "),s("code",[t._v("while")]),t._v(" 循环不同，"),s("code",[t._v("do")]),t._v(" 循环是用分号结尾的。")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("while")]),t._v(" 的循环体使用花括号括起来的话，则 "),s("code",[t._v("while")]),t._v(" 循环也不用使用分号做结尾。")])])])]),t._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("h3",{attrs:{id:"标准示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准示例")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])])])])}],!1,null,null,null);a.default=n.exports}}]);