(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{180:function(t,e,r){t.exports=r.p+"assets/img/743418c6-cb11-416e-bccc-688afae04b01.c582b0e4.jpg"},375:function(t,e,r){"use strict";r.r(e);var _=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"整体工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体工作流程","aria-hidden":"true"}},[this._v("#")]),this._v(" 整体工作流程")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ol",[r("li",[t._v("DNS 查询")]),t._v(" "),r("li",[t._v("TCP 连接")]),t._v(" "),r("li",[t._v("HTTP 请求")]),t._v(" "),r("li",[t._v("服务端响应")]),t._v(" "),r("li",[t._v("客户端渲染")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"浏览器的主要组成部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的主要组成部分","aria-hidden":"true"}},[this._v("#")]),this._v(" 浏览器的主要组成部分")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ol",[r("li",[t._v("用户界面（User Interface）：包括地址栏、后退 / 前进按钮、书签目录等，也就是你所看到的除了用来你所请求页面的主窗口之外的其他部分。")]),t._v(" "),r("li",[t._v("浏览器引擎（Browser Engine）：在用户界面和呈现引擎之间传送指令。")]),t._v(" "),r("li",[t._v("渲染引擎（Rendering Engine）：负责显示请求的内容。如果请求的内容是 HTML，它就负责解析 HTML 和 CSS 内容，并将解析后的内容显示在屏幕上。")]),t._v(" "),r("li",[t._v("网络（Networking）：用于网络调试，例如 HTTP 请求，它具有平台无关的接口，并为所有平台提供底层实现。")]),t._v(" "),r("li",[t._v("UI 后端（UI Backed）：用来绘制类似组合选择框及对话框等基本组件，具有不特定于某个平台的通用接口，底层使用操作系统的用户接口。")]),t._v(" "),r("li",[t._v("JavaScript 解释器（Javascript Interpreter）：用于解析和执行 JavaScript 代码。")]),t._v(" "),r("li",[t._v("数据存储（Data Persistence）：属于持久层，浏览器需要在硬盘中保存类似 Cookie 的各种数据，HTML5 定义了 Web Database 技术，这是一种轻量级完整的客户端存储技术。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"浏览器的工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的工作流程","aria-hidden":"true"}},[this._v("#")]),this._v(" 浏览器的工作流程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(180),alt:"浏览器工作大致流程"}})])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ol",[r("li",[r("strong",[t._v("浏览器解析过程")]),t._v(" "),r("ul",[r("li",[t._v("HTML / SVG / XHTML：渲染引擎通过三个 C++ 的类对应这三类文档，解析这三种文件构建 "),r("strong",[t._v("DOM 树")]),t._v("（DOM Tree）")]),t._v(" "),r("li",[t._v("CSS：渲染引擎解析 CSS 文件构建 "),r("strong",[t._v("CSS 规则树")]),t._v("（ CSS Rule Tree）")]),t._v(" "),r("li",[t._v("JavaScript：JavaScript 通过 DOM API 和 CSSOM API 来操作 DOM Tree 和 CSS Rule Tree")])])]),t._v(" "),r("li",[r("strong",[t._v("构建渲染树（Rendering Tree）")]),t._v(" "),r("ul",[r("li",[t._v("解析完成后，浏览器引擎会通过 DOM 树和 CSS 规则树来构造"),r("strong",[t._v("渲染树")])]),t._v(" "),r("li",[t._v("渲染树并不等同于 DOM 树，因为一些像 "),r("code",[t._v("<header>")]),t._v(" 或 "),r("code",[t._v("display: none")]),t._v(" 的东西就没必要放到渲染树中")]),t._v(" "),r("li",[t._v("CSS 的 Rule Tree 主要是为了完成匹配并把 CSS Rule 附加至渲染树上的每个 Element 上。然后，计算每个渲染对象的位置，这通常是 布局（Layout） 和 重排（Reflow） 过程中发生")]),t._v(" "),r("li",[t._v("一旦渲染树构建完成，浏览器会把树里面的内容绘制在屏幕上。")])])]),t._v(" "),r("li",[r("strong",[t._v("布局（Layout）")]),t._v("：定位坐标和大小，是否换行，"),r("code",[t._v("position")]),t._v("、"),r("code",[t._v("overflow")]),t._v(" 之类的属性。确定每个 DOM 元素的样式规则后，计算每个 DOM 元素最终在屏幕上显示的大小和位置。Web 页面中元素的布局是相对的，因此一个元素的布局发生变化，会联动地引发其他元素的布局发生变化。比如 "),r("code",[t._v("body")]),t._v(" 元素的 "),r("code",[t._v("width")]),t._v(" 变化会影响其后代元素的宽度")]),t._v(" "),r("li",[r("strong",[t._v("绘制（Paint）")]),t._v("：绘制文字、颜色、图像、边框和阴影等，也就是一个 DOM 元素所有的"),r("strong",[t._v("可视效果")]),t._v("。一般来说，这个绘制过程是在多个层上完成的")]),t._v(" "),r("li",[r("strong",[t._v("渲染层合并（Composite）")]),t._v("：页面中 DOM 元素的绘制是在多个层上进行的，在每个层上完成绘制过程之后，浏览器会将所有层按照合理的顺序合并成一个图层，然后在屏幕上呈现")]),t._v(" "),r("li",[t._v("最后通过调用操作系统 NativeGUI API 进行绘制")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("参考资料：")])])}],i=r(0),n=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("从耗时的角度，浏览器请求、加载、渲染一个页面，时间花在下面五件事情上：")]),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("客户端渲染的大致工作流程：")]),t._v(" "),r("ol",[r("li",[r("router-link",{attrs:{to:"./the-rendering-engine.html"}},[t._v("渲染引擎（The Rendering Engine）")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./constructing-the-object-model.html"}},[t._v("构建对象模型（Contructing the Object Model）")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./script-loads.html"}},[t._v("脚本加载")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./render-tree-construction.html"}},[t._v("渲染树构建（Render Tree Construction）")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./layout.html"}},[t._v("布局（Layout）")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./painting.html"}},[t._v("绘制（Painting）")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./css2-visual-module.html"}},[t._v("CSS2 可视模型")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"./composite.html"}},[t._v("渲染层合并")])],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("需要注意的是，不同于大部分浏览器，Chrome 为每个 Tab 分配了各自的渲染引擎实例，每个 Tab 就是一个独立的进程。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("hr"),t._v(" "),t._m(7),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/wjlog/p/5744753.html#chapter8",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端必读：浏览器内部工作原理"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29418126",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的渲染：过程与原理"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/entry/5a9a379af265da239d48c027",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器工作员：Webkit 内核研究"),r("OutboundLink")],1)])])])},_,!1,null,null,null);e.default=n.exports}}]);