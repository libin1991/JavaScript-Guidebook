(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{208:function(t,e,s){t.exports=s.p+"assets/img/164b1ce6-aec5-43ed-8e97-dc0d7f288512.48471bcd.png"},502:function(t,e,s){"use strict";s.r(e);var r=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"定时器运行机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定时器运行机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 定时器运行机制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(208),alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("首先在 0 毫秒的时候有一个持续 18 毫秒的 JavaScript 代码块要执行。")]),t._v(" "),s("li",[t._v("然后在 0 毫秒的时候设了两个 10 毫秒延迟的定时器，"),s("code",[t._v("setTimeout")]),t._v(" 以及 "),s("code",[t._v("setInterval")]),t._v(" ，"),s("code",[t._v("setTimeout")]),t._v(" 先设定。")]),t._v(" "),s("li",[t._v("在第 6 毫秒的时候有一个发生了鼠标单击事件。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"事件排队"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件排队","aria-hidden":"true"}},[this._v("#")]),this._v(" 事件排队")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("同时发生了这么多事情，由于 JavaScript 的单线程特性，"),e("strong",[this._v("当主线程正在执行状态，有异步事件触发时，它就会退出主线程，进入宿主环境中用于处理定时器的线程，当准备就绪后会进入事件队列，并且在主线程空闲时才推入执行")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("示例中首先有一个 18 毫秒的代码块要执行，在这 18 毫秒中只能执行这段代码块，"),e("strong",[this._v("其他事件触发了之后只能在事件队列中排队等待执行")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在代码块还在运行期间，第 6 毫秒的时候，发生了一个鼠标单击事件，以及第 10 毫秒时的 "),e("code",[this._v("setTimeout")]),this._v(" 和 "),e("code",[this._v("setInterval")]),this._v(" 两个处理程序，这三个事件不能立即执行，而是"),e("strong",[this._v("被添加到等待执行的事件队列")]),this._v("中。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"先进先出原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先进先出原则","aria-hidden":"true"}},[this._v("#")]),this._v(" 先进先出原则")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("18 毫秒的时候代码块结束执行，有三个任务在排队等待执行，根据"),e("strong",[this._v("先进先出的原则，此时会先执行 click 鼠标点击事件")]),this._v("，"),e("code",[this._v("setTimeout")]),this._v(" 和 "),e("code",[this._v("setInterval")]),this._v(" 将继续排队等待执行。先进先出原则可以理解为先排队的先执行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"间歇调用定时器调用被废弃"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#间歇调用定时器调用被废弃","aria-hidden":"true"}},[this._v("#")]),this._v(" 间歇调用定时器调用被废弃")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在鼠标点击事件执行时，第 20 毫秒处，第二个"),s("code",[t._v("setInterval")]),t._v("也到期了，因为此时已经 "),s("code",[t._v("click")]),t._v(" 事件占用了线程，所以 "),s("code",[t._v("setInterval")]),t._v(" 还是不能被执行，并且因为此时队列中已经有一个 "),s("code",[t._v("setInterval")]),t._v(" 正在排队等待执行，所以这一次的 "),s("code",[t._v("setInterval")]),t._v(" 的调用将被废弃。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("⚠️ "),e("strong",[this._v("注意")]),this._v("：浏览器不会对同一个 "),e("code",[this._v("setInterval")]),this._v(" 处理程序多次添加到待执行队列。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"定时器无法保证准时执行回调函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定时器无法保证准时执行回调函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 定时器无法保证准时执行回调函数")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("鼠标点击事件在第 28 毫秒处结束执行，有两个任务（"),s("code",[t._v("setTimeout")]),t._v(" 和 "),s("code",[t._v("setInterval")]),t._v("）正在等待执行，遵循先进先出的原则，"),s("code",[t._v("setTimeout")]),t._v(" 早于 "),s("code",[t._v("setInterval")]),t._v(" 设定，所以先执行 "),s("code",[t._v("setTimeout")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因此我们期望在第 10 毫秒处执行的 "),e("code",[this._v("setTimeout")]),this._v(" 处理程序，最终会在第 28 毫秒处才开始执行，这就是上文提到的"),e("code",[this._v("setTimeout")]),this._v("/"),e("code",[this._v("setInterval")]),this._v("无法保证准时执行回调函数。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在 30 毫秒处，"),e("code",[this._v("setInterval")]),this._v(" 又触发了，因为队列中已经有 "),e("code",[this._v("setInterval")]),this._v(" 在排队，所以这次的触发又作废了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"间歇调用定时器的连续执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#间歇调用定时器的连续执行","aria-hidden":"true"}},[this._v("#")]),this._v(" 间歇调用定时器的连续执行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("setTimeout")]),this._v(" 执行结束，在第 36 毫秒处，队列中的 "),e("code",[this._v("setInterval")]),this._v(" 处理程序才开始执行，"),e("code",[this._v("setInterval")]),this._v(" 需要执行 6 毫秒。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在第 40 毫秒的时候 "),s("code",[t._v("setInterval")]),t._v(" 再次触发，因为此时"),s("strong",[t._v("上一个 "),s("code",[t._v("setInterval")]),t._v(" 正在执行期间，队列中并没有 "),s("code",[t._v("setInterval")]),t._v(" 在排队，这次触发的 "),s("code",[t._v("setInterval")]),t._v(" 将进入队列等候")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因此，"),e("code",[this._v("setInterval")]),this._v(" 的处理时长不能比设定的间隔长，否则 "),e("code",[this._v("setInterval")]),this._v(" 将会没有间隔地重复执行。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("第 42 毫秒的时候，"),s("strong",[t._v("第一个 "),s("code",[t._v("setInterval")]),t._v(" 结束，然后队列中的 "),s("code",[t._v("setInterval")]),t._v(" 立即开始执行")]),t._v("，在 48 毫秒的时候完成执行。然后 50 毫秒的时候再次触发 "),s("code",[t._v("setInterval")]),t._v("，此时没有任务在排队，将会立即执行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"超时调用定时器按固定间隔触发周期性定时器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#超时调用定时器按固定间隔触发周期性定时器","aria-hidden":"true"}},[this._v("#")]),this._v(" 超时调用定时器按固定间隔触发周期性定时器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("上文说了，"),e("code",[this._v("setInterval")]),this._v(" 的处理时长不能比设定的间隔长，否则 "),e("code",[this._v("setInterval")]),this._v(" 将会没有间隔的重复执行。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际上我不止在忍者秘籍中见过，在很多地方都见过这种技术。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeatMe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("repeatMe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行完处理程序的内容后，在末尾再间隔10毫秒来调用该程序，这样就能保证一定是10毫秒的周期调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("定时器不能非常细粒化的控制执行的时间，书中建议在 15ms 以上。")]),this._v(" "),e("li",[this._v("可以使用定时器来分解长时间运行的任务，这里可以自行谷歌。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("函数 "),e("code",[this._v("setTimeout")]),this._v(" 接受两个参数：待加入队列的消息和一个延迟（可选，默认为 0）。这个延迟代表了消息被实际加入到队列的最小延迟时间。如果队列中没有其它消息，在这段延迟时间过去之后，消息会被马上处理。但是，如果有其它消息，"),e("code",[this._v("setTimeout")]),this._v(" 消息必须等待其它消息处理完。因此第二个参数仅仅表示最少延迟时间，而非确切的等待时间。")])}],_=s(0),n=Object(_.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("让我们看看这里发生了什么事情：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("这里的异步事件包括：鼠标单击、定时器触发、Ajax 请求、Promise 等事件。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),s("p",[t._v("但是对这个问题，很多情况下，我们并不能清晰的把控处理程序所消耗的时长，为了我们能按照一定的间隔周期性的触发定时器。")]),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("参考资料：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://qingbob.com/difference-between-settimeout-setinterval/",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解 setTimeout 和 setInterval 吗？"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://johnresig.com/blog/how-javascript-timers-work/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How JavaScript Timers Work"),s("OutboundLink")],1)])])])},r,!1,null,null,null);e.default=n.exports}}]);