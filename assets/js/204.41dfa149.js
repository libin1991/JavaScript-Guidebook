(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{583:function(t,e,_){"use strict";_.r(e);var r=_(0),v=Object(r.a)({},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("div",{staticClass:"content"},[t._m(0),t._v(" "),_("p",[t._v("触控事件与鼠标事件类似，不同的是触控事件还提供同一表面不同位置的同步触摸。")]),t._v(" "),_("p",[t._v("触控事件包括三个接口对象：")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TouchEvent",target:"_blank",rel:"noopener noreferrer"}},[t._v("TouchEvent"),_("OutboundLink")],1),t._v("：表示位于表面上的一个触摸点的某个状态发生改变时产生的事件")]),t._v(" "),_("li",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Touch",target:"_blank",rel:"noopener noreferrer"}},[t._v("Touch"),_("OutboundLink")],1),t._v("：表示用户与触摸表面间的一个单独的接触点")]),t._v(" "),_("li",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TouchList",target:"_blank",rel:"noopener noreferrer"}},[t._v("TouchList"),_("OutboundLink")],1),t._v("：表示一组 Touch，用于多点触控的情况")])]),t._v(" "),t._m(1),t._v(" "),_("p",[t._v("TouchEvent 的属性继承了 UIEvent 和 Event。"),_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TouchEvent#%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("详情见MDN文档"),_("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),_("p",[t._v("Touch 对象表示在触控设备上的触摸点。通常是指手指或者触控笔在触屏设备或者触摸板上的操作。")]),t._v(" "),_("p",[t._v("以下属性描述了用户的触控行为（均为只读属性）：")]),t._v(" "),t._m(8)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"触控事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#触控事件","aria-hidden":"true"}},[this._v("#")]),this._v(" 触控事件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"touchevent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#touchevent","aria-hidden":"true"}},[this._v("#")]),this._v(" TouchEvent")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("通过检查触控事件的 "),e("code",[this._v("TouchEvent.type")]),this._v(" 属性来确定当前事件属于哪种类型。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("⚠️ 注意：在很多情况下，触控事件和鼠标事件会同时触发（目的是让没有对触控设备优化的代码仍可在触控设备上运行）。如果你调用了触控事件，可以阻止默认行为以防止触发相对应的鼠标事件。")])])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("table",[_("thead",[_("tr",[_("th",[t._v("事件")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("touchstart")]),t._v(" "),_("td",[t._v("当用户触摸屏幕时触发（即使已经有手指放在屏幕上也会触发）")])]),t._v(" "),_("tr",[_("td",[t._v("touchmove")]),t._v(" "),_("td",[t._v("当手指在屏幕上滑动时触发（在触发期间阻止默认行为可阻止画面滑动）")])]),t._v(" "),_("tr",[_("td",[t._v("touchend")]),t._v(" "),_("td",[t._v("当手指从屏幕上离开的时候触发（触发频率因不同浏览器而不同）")])]),t._v(" "),_("tr",[_("td",[t._v("touchcancel")]),t._v(" "),_("td",[t._v("当系统停止跟踪触摸的时候触发")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("touchcancel")]),this._v(" 事件触发的常见原因：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("由于某事件取消了触摸：例如触摸过程被模态框打断")]),this._v(" "),e("li",[this._v("触电离开了文档窗口，而进入了浏览器的界面元素、插件或者其他外部内容区域")]),this._v(" "),e("li",[this._v("当用户产生的触点个数超过设备支持的个数，从而导致 TouchList 中最早的 Touch 对象被取消")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"touch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#touch","aria-hidden":"true"}},[this._v("#")]),this._v(" Touch")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("identifier")]),t._v(" "),_("td",[t._v("Touch 对象的唯一标识符，一个完整的触控过程（手指在触控面上划过没有离开）标识符不会改变。可通过此属性判断跟踪是否是同一次触摸过程。")])]),t._v(" "),_("tr",[_("td",[t._v("screenX")]),t._v(" "),_("td",[t._v("触控点相对于屏幕左边沿的 X 坐标。")])]),t._v(" "),_("tr",[_("td",[t._v("screenY")]),t._v(" "),_("td",[t._v("触控点相对于屏幕上边沿的 Y 坐标。")])]),t._v(" "),_("tr",[_("td",[t._v("clientX")]),t._v(" "),_("td",[t._v("触控点相对于可视区左边沿的 X 坐标，不包括任何滚动偏移。")])]),t._v(" "),_("tr",[_("td",[t._v("clientY")]),t._v(" "),_("td",[t._v("触控点相对于可视区左边沿的 Y 坐标，不包括任何滚动偏移。")])]),t._v(" "),_("tr",[_("td",[t._v("pageX")]),t._v(" "),_("td",[t._v("触控点相对于页面文档左边沿的 X 坐标。")])]),t._v(" "),_("tr",[_("td",[t._v("pageY")]),t._v(" "),_("td",[t._v("触控点相对于页面文档上边沿的 Y 坐标。")])]),t._v(" "),_("tr",[_("td",[t._v("radiusX")]),t._v(" "),_("td",[t._v("能够包围用户和触摸平面的接触面的最小椭圆的水平轴（X 轴）半径。这个值的单位和 screenX  相同。")])]),t._v(" "),_("tr",[_("td",[t._v("radiusY")]),t._v(" "),_("td",[t._v("能够包围用户和触摸平面的接触面的最小椭圆的垂直轴（Y 轴）半径。这个值的单位和  screenY 相同")])]),t._v(" "),_("tr",[_("td",[t._v("rotationAngle")]),t._v(" "),_("td",[t._v("由 radiusX 和 radiusY 描述的正方向椭圆，需要通过顺时针旋转这个角度值，才能最精准地覆盖住用户和触控面的接触面。")])]),t._v(" "),_("tr",[_("td",[t._v("force")]),t._v(" "),_("td",[t._v("手指挤压触控平面的压力大小，取值范围 0.0 到 1.0 的浮点数（没有压力到最大压力）")])])])])}],!1,null,null,null);e.default=v.exports}}]);