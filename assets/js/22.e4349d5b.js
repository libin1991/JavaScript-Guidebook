(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{257:function(t,e,s){t.exports=s.p+"assets/img/566f8e31-9eb2-4eee-a066-cecf7f3567e8.835119a5.png"},258:function(t,e,s){t.exports=s.p+"assets/img/9ce037e1-c5ce-485b-9fae-9fa9c65b81ff.cd511b42.png"},536:function(t,e,s){"use strict";s.r(e);var r=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise","aria-hidden":"true"}},[this._v("#")]),this._v(" Promise")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[this._v("#")]),this._v(" 语法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* executor */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[this._v("#")]),this._v(" 参数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("参数  "),e("code",[this._v("executor")]),this._v(" 是带有 "),e("code",[this._v("resolve")]),this._v(" 和 "),e("code",[this._v("reject")]),this._v(" 两个参数的函数。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Promise 构造函数执行时立即调用 "),s("code",[t._v("executor")]),t._v(" 函数，"),s("code",[t._v("resolve")]),t._v(" 和 "),s("code",[t._v("reject")]),t._v(" 两个函数作为参数传入 "),s("code",[t._v("executor")]),t._v(" ，"),s("code",[t._v("executor")]),t._v(" 函数会在 Promise 构造函数返回新建对象前被调用。")]),t._v(" "),s("li",[s("code",[t._v("resolve")]),t._v(" 和 "),s("code",[t._v("reject")]),t._v(" 函数被调用时，分别将 Promise 的状态改为 "),s("code",[t._v("fulfilled")]),t._v("（完成）或 "),s("code",[t._v("rejected")]),t._v("（失败）。")]),t._v(" "),s("li",[s("code",[t._v("executor")]),t._v(" 内部通常会执行一些异步操作，一旦完成，可以调用 "),s("code",[t._v("resolve")]),t._v(" 函数来将 Promise 状态改成 "),s("code",[t._v("fulfilled")]),t._v("，或者在发生错误时将它的状态改为 "),s("code",[t._v("rejected")]),t._v("。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流","aria-hidden":"true"}},[this._v("#")]),this._v(" 工作流")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("由于 "),e("code",[this._v("Promise.prototype.then")]),this._v(" 和 "),e("code",[this._v("Promise.prototype.catch")]),this._v(" 方法返回 Promise 对象，所以它们可以被链式调用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(257),alt:"Promise"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态","aria-hidden":"true"}},[this._v("#")]),this._v(" 状态")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("用 "),e("code",[this._v("new Promise")]),this._v(" 实例化的 Promise 对象有以下三种状态：")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("strong",[t._v('"unresolved" Pending')]),t._v("：[待定] 初始状态")]),t._v(" "),s("li",[s("strong",[t._v('"has-resolution" Fulfilled')]),t._v("：[实现] 操作成功，此时会调用 "),s("code",[t._v("onFulfilled")])]),t._v(" "),s("li",[s("strong",[t._v('"has-rejection" Rejected')]),t._v("：[否决] 操作失败，此时会调用 "),s("code",[t._v("onRejected")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(258),alt:"Promise state"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("⚠️ Promise 的状态，从 "),e("em",[this._v("Pending")]),this._v(" 转换为 "),e("em",[this._v("Fulfilled")]),this._v(" 或 "),e("em",[this._v("Rejected")]),this._v(" 之后，这个 Promise 对象的状态就不会发生任何变化。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("而当 Promise 状态一旦发生变化，就会触发 "),e("code",[this._v(".then()")]),this._v(" 里的响应函数处理后续步骤。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("但是，"),e("code",[this._v("Promise.then")]),this._v(" 参数中的函数只会调用其中一个，调用哪个取决于该 Promise 的状态。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("另外，Fulfilled 和 Rejected 这两个中的任何一种状态都可以表示为 "),e("strong",[this._v("Settled（不变的）")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化","aria-hidden":"true"}},[this._v("#")]),this._v(" 初始化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("ES6 规定，"),e("code",[this._v("Promise")]),this._v(" 对象是一个构造函数，通过 "),e("code",[this._v("new")]),this._v(" 关键字调用，生成 "),e("code",[this._v("Promise")]),this._v(" 实例。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Promise")]),this._v(" 构造函数接受一个函数作为参数，该函数的两个参数分别是 "),e("code",[this._v("resolve")]),this._v(" 和 "),e("code",[this._v("reject")]),this._v("。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("resolve")]),this._v("：从「未完成」变为「已成功」，在异步操作成功时调用，并将异步操作的结果，作为参数传递出去。该函数的参数除了正常的值以外，还可能是另一个 Promise 实例。")]),this._v(" "),e("li",[e("code",[this._v("reject")]),this._v("：从「未完成」变为「已失败」，在异步失败时调用，并将异步操作报出的错误，作为参数传递出去。该函数的参数通常是 Error 对象的实例，表示抛出的错误。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 执行器 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步处理")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据处理完成")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据处理出错")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功，下一步")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失败，做相应处理")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Promise 特点：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("无法取消 Promise，一旦新建它就会立即执行，无法中途取消")]),this._v(" "),e("li",[this._v("如果不设置回调函数，Promise 内部抛出错误，不会反应到外部")]),this._v(" "),e("li",[this._v("当处于 "),e("code",[this._v("pending")]),this._v(" 状态时，无法得知目前进展到哪一个阶段")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 属性")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Promise.length")])]),t._v(" "),s("td",[t._v("值总是1（构造器参数数目）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.prototype")])]),t._v(" "),s("td",[t._v("表示 Promise 构造器的原型")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Promise.all(iterable)")])]),t._v(" "),s("td",[t._v("用于将多个 Promise 实例，包装成一个新的 Promise 实例")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.race(iterable)")])]),t._v(" "),s("td",[t._v("用于将多个 Promise 实例，包装成一个新的 Promise 实例")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.reject(reason)")])]),t._v(" "),s("td",[t._v("返回新的 Promise 实例，该实例的状态为 "),s("code",[t._v("rejected")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.resolve(value)")])]),t._v(" "),s("td",[t._v("返回新的 Promise 实例，该实例的状态为 "),s("code",[t._v("fulfilled")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"原型对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 原型对象")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"属性-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 属性")])},function(){var t=this.$createElement,e=this._self._c||t;return e("table",[e("thead",[e("tr",[e("th",[this._v("原型属性")]),this._v(" "),e("th",[this._v("说明")])])]),this._v(" "),e("tbody",[e("tr",[e("td",[e("code",[this._v("Promise.prototype.constructor")])]),this._v(" "),e("td",[this._v("返回被创建的实例函数，默认为 Promise 函数")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("原型方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Promise.prototype.catch(onRejected)")])]),t._v(" "),s("td",[t._v("相当于 "),s("code",[t._v(".then(null, rejection)")]),t._v("，用于指定发生错误时的回调函数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.prototype.then(onFulfilled, onRejected)")])]),t._v(" "),s("td",[t._v("添加 "),s("code",[t._v("fulfillment")]),t._v(" 和 "),s("code",[t._v("rejection")]),t._v(" 回调到当前 Promise，返回一个新的 Promise，将以回调的返回值来 "),s("code",[t._v("resolve")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Promise.prototype.finally(onFinally)")])]),t._v(" "),s("td",[t._v("用于指定无论 Promise 对象最后状态如何，都会执行的操作")])])])])}],n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("传统异步编程最大特点是地狱式回调嵌套，一旦嵌套层次过深，项目代码将难以理解和维护。而 Promise 能让我们通过链式调用的方法去解决回调地狱的问题。")]),t._v(" "),s("p",[t._v("Promise 是异步编程的一种解决方案，可以将异步操作队列化，按照期望的顺序执行，返回符合预期的结果。可以在对象之间传递和操作 Promise，帮助我们处理队列。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("Promise 是一个代理对象（代理一个值），被代理的值在 Promise 对象创建时可能是未知的。它允许你为异步操作的成功和失败分别绑定相应的处理方法（handlers）。这让异步方法可以像同步方法那样返回值，但并不是立即返回最终执行结果，而是一个能代表未来出现的结果的 Promise 对象。")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("关于上述三种状态的读法，其中左侧在 "),s("a",{attrs:{href:"http://liubin.org/promises-book/#es6-promises",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 Promise"),s("OutboundLink")],1),t._v(" 规范中定义的术语，而左侧是在 "),s("a",{attrs:{href:"http://liubin.org/promises-book/#promises-aplus",target:"_blank",rel:"noopener noreferrer"}},[t._v("Promise/A+"),s("OutboundLink")],1),t._v(" 中描述状态的术语。")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("如果某些事件不断地反复发生，一般来说，使用 "),s("a",{attrs:{href:"https://nodejs.org/api/stream.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stream"),s("OutboundLink")],1),t._v(" 模式是比部署 "),s("code",[t._v("Promise")]),t._v(" 更好的选择。")]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("参考资料：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://liubin.org/promises-book/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Promise 迷你书"),s("OutboundLink")],1)])])])},r,!1,null,null,null);e.default=a.exports}}]);