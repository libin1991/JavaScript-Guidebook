(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{551:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("Generator 函数是 ES6 提供的一种异步编程解决方案，语法行为与传统函数完全不同。")]),t._v(" "),e("blockquote",[e("p",[t._v("本篇着重介绍 语法及 API，异步编程应用参考 "),e("router-link",{attrs:{to:"./generator-async.html"}},[t._v("Generator 函数的异步应用")])],1)]),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("Generator 函数有多种理解角度。语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。")]),t._v(" "),e("p",[t._v("执行 Generator 函数会返回一个遍历器对象，也就是说，Generator 函数除了状态机，还是一个 "),e("router-link",{attrs:{to:"./../iterator-objects/iterator.html"}},[t._v("遍历器对象")]),t._v(" 生成函数。返回的遍历器对象，可以依次遍历 Generator 函数内部的每一个状态。")],1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("形式上，Generator 函数是一个普通函数，但是有两个特征")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),e("p",[t._v("Generator 函数的调用方法与普通函数一样，也是在函数名后面加上一对圆括号。不同的是，调用 Generator 函数后，该函数并"),e("strong",[t._v("不执行")]),t._v("，返回的也不是函数运行结果，而是一个"),e("strong",[t._v("指向内部状态的指针对象")]),t._v("，也就是 "),e("router-link",{attrs:{to:"./../iterator-objects/iterator.html"}},[t._v("遍历器对象")]),t._v("（Iterator Object）。")],1),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),e("ul",[t._m(39),t._v(" "),e("li",[e("p",[e("router-link",{attrs:{to:"./properties-of-the-promise-prototype-object/return.html"}},[t._v("Generator.prototype.return")])],1)]),t._v(" "),e("li",[e("p",[e("router-link",{attrs:{to:"./properties-of-the-promise-prototype-object/throw.html"}},[t._v("Generator.prototype.throw")])],1)])]),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48),t._m(49),t._v(" "),e("p",[t._v("如果一个对象的属性是 Generator 函数，可以简写成下面的形式。")]),t._v(" "),t._m(50),t._m(51),t._v(" "),e("p",[t._v("它的完整形式如下，与上面的写法是等价的。")]),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),t._m(58),t._v(" "),e("hr"),t._v(" "),t._m(59),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/generator",target:"_blank",rel:"noopener noreferrer"}},[t._v("《ECMAScript 6 入门》阮一峰著"),e("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator","aria-hidden":"true"}},[this._v("#")]),this._v(" Generator")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"状态机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态机","aria-hidden":"true"}},[this._v("#")]),this._v(" 状态机")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"函数特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数特征","aria-hidden":"true"}},[this._v("#")]),this._v(" 函数特征")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("code",[t._v("function")]),t._v(" 关键字与函数名之间有一个星号（"),e("code",[t._v("*")]),t._v("）")]),t._v(" "),e("li",[t._v("函数体内部使用 "),e("code",[t._v("yield")]),t._v("（中文 "),e("code",[t._v("生产/产出")]),t._v(" 的意思）表单式，定义不同的内部状态")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorldGenerator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'World'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ending'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hw "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorldGenerator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("代码定义了一个 Generator 函数 "),e("code",[t._v("helloWorldGenerator")]),t._v("，它内部有两个"),e("code",[t._v("yield")]),t._v("表达式（"),e("code",[t._v("hello")]),t._v(" 和 "),e("code",[t._v("world")]),t._v("），即该函数有三个状态："),e("code",[t._v("hello")]),t._v("、"),e("code",[t._v("world")]),t._v(" 和 "),e("code",[t._v("return")]),t._v(" 语句（结束执行）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"调用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 调用方法")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("下一步，必须调用遍历器对象的 "),e("code",[t._v("next")]),t._v(" 方法，使得指针移向下一个状态。也就是说，每次调用 "),e("code",[t._v("next")]),t._v(" 方法，内部指针就从函数头部或上一次停下来的地方开始执行，直到遇到下一个 "),e("code",[t._v("yield")]),t._v(" 表达式（或 "),e("code",[t._v("return")]),t._v(" 语句）为止。换言之，Generator 函数是分段执行的，"),e("code",[t._v("yield")]),t._v(" 表达式是暂停执行的标记，而 "),e("code",[t._v("next")]),t._v(" 方法可以恢复执行。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("hw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'Hello', done: false }")]),t._v("\n\nhw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'World', done: false }")]),t._v("\n\nhw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'Ending', done: true }")]),t._v("\n\nhw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: undefined, done: true }")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面代码一共调用了四次"),s("code",[this._v("next")]),this._v("方法。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("第一次调用，Generator 函数开始执行，直到遇到第一个 "),e("code",[t._v("yield")]),t._v(" 表达式为止。"),e("code",[t._v("next")]),t._v(" 方法返回一个对象，它的"),e("code",[t._v("value")]),t._v(" 属性就是当前 "),e("code",[t._v("yield")]),t._v(" 表达式的值 "),e("code",[t._v("Hello")]),t._v("，"),e("code",[t._v("done")]),t._v(" 属性的值 "),e("code",[t._v("false")]),t._v("，表示遍历还没有结束。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("第二次调用，Generator 函数从上次 "),e("code",[t._v("yield")]),t._v(" 表达式停下的地方，一直执行到下一个 "),e("code",[t._v("yield")]),t._v(" 表达式。"),e("code",[t._v("next")]),t._v(" 方法返回的对象的 "),e("code",[t._v("value")]),t._v(" 属性就是当前 "),e("code",[t._v("yield")]),t._v(" 表达式的值 "),e("code",[t._v("World")]),t._v("，"),e("code",[t._v("done")]),t._v(" 属性的值 "),e("code",[t._v("false")]),t._v("，表示遍历还没有结束。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("第三次调用，Generator 函数从上次 "),e("code",[t._v("yield")]),t._v(" 表达式停下的地方，一直执行到 "),e("code",[t._v("return")]),t._v(" 语句（如果没有 "),e("code",[t._v("return")]),t._v(" 语句，就执行到函数结束）。"),e("code",[t._v("next")]),t._v(" 方法返回的对象的 "),e("code",[t._v("value")]),t._v(" 属性，就是紧跟在 "),e("code",[t._v("return")]),t._v(" 语句后面的表达式的值（如果没有 "),e("code",[t._v("return")]),t._v(" 语句，则 "),e("code",[t._v("value")]),t._v(" 属性的值为 "),e("code",[t._v("undefined")]),t._v("），"),e("code",[t._v("done")]),t._v(" 属性的值 "),e("code",[t._v("true")]),t._v("，表示遍历已经结束。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("第四次调用，此时 Generator 函数已经运行完毕，"),e("code",[t._v("next")]),t._v(" 方法返回对象的 "),e("code",[t._v("value")]),t._v(" 属性为 "),e("code",[t._v("undefined")]),t._v("，"),e("code",[t._v("done")]),t._v(" 属性为 "),e("code",[t._v("true")]),t._v("。以后再调用 "),e("code",[t._v("next")]),t._v(" 方法，返回的都是这个值。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("总结一下，调用 Generator 函数，返回一个遍历器对象，代表 Generator 函数的内部指针。以后，每次调用遍历器对象的 "),e("code",[t._v("next")]),t._v(" 方法，就会返回一个有着 "),e("code",[t._v("value")]),t._v(" 和 "),e("code",[t._v("done")]),t._v(" 两个属性的对象。"),e("code",[t._v("value")]),t._v("属性表示当前的内部状态的值，是 "),e("code",[t._v("yield")]),t._v(" 表达式后面那个表达式的值；"),e("code",[t._v("done")]),t._v(" 属性是一个布尔值，表示是否遍历结束。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"yield-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield-表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" yield 表达式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("由于 Generator 函数返回的遍历器对象，只有调用 "),s("code",[this._v("next")]),this._v(" 方法才会遍历下一个内部状态，所以其实提供了一种可以暂停执行的函数。"),s("code",[this._v("yield")]),this._v(" 表达式就是暂停标志。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("遍历器对象的 "),s("code",[this._v("next")]),this._v(" 方法的运行逻辑如下。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[e("p",[t._v("遇到 "),e("code",[t._v("yield")]),t._v(" 表达式，就暂停执行后面的操作，并将紧跟在 "),e("code",[t._v("yield")]),t._v(" 后面的那个表达式的值，作为返回的对象的 "),e("code",[t._v("value")]),t._v(" 属性值。")])]),t._v(" "),e("li",[e("p",[t._v("下一次调用 "),e("code",[t._v("next")]),t._v(" 方法时，再继续往下执行，直到遇到下一个 "),e("code",[t._v("yield")]),t._v(" 表达式。")])]),t._v(" "),e("li",[e("p",[t._v("如果没有再遇到新的 "),e("code",[t._v("yield")]),t._v(" 表达式，就一直运行到函数结束，直到 "),e("code",[t._v("return")]),t._v(" 语句为止，并将 "),e("code",[t._v("return")]),t._v(" 语句后面的表达式的值，作为返回的对象的 "),e("code",[t._v("value")]),t._v(" 属性值。")])]),t._v(" "),e("li",[e("p",[t._v("如果该函数没有 "),e("code",[t._v("return")]),t._v(" 语句，则返回的对象的 "),e("code",[t._v("value")]),t._v(" 属性值为 "),e("code",[t._v("undefined")]),t._v("。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("需要注意的是，"),s("code",[this._v("yield")]),this._v(" 表达式后面的表达式，只有当调用 "),s("code",[this._v("next")]),this._v(" 方法、内部指针指向该语句时才会执行，因此等于为 JavaScript 提供了手动的“"),s("strong",[this._v("惰性求值")]),this._v("”（Lazy Evaluation）的语法功能。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面代码中，"),s("code",[this._v("yield")]),this._v(" 后面的表达式 "),s("code",[this._v("123 + 456")]),this._v("，不会立即求值，只会在"),s("code",[this._v("next")]),this._v("方法将指针移到这一句时，才会求值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"yield-与-return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yield-与-return","aria-hidden":"true"}},[this._v("#")]),this._v(" yield 与 return")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("yield")]),this._v(" 表达式与 "),s("code",[this._v("return")]),this._v(" 语句既有相似之处，也有区别。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("p",[t._v("相似")]),t._v(" "),e("ul",[e("li",[t._v("两种语句表达式都能返回紧跟在语句后面的那个表达式的值。")])])]),t._v(" "),e("li",[e("p",[t._v("区别")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("记忆功能")]),t._v("：每次遇到 "),e("code",[t._v("yield")]),t._v("，函数暂停执行，下一次再从该位置继续向后执行，而 "),e("code",[t._v("return")]),t._v(" 语句不具备位置记忆的功能。")]),t._v(" "),e("li",[e("strong",[t._v("执行次数")]),t._v("：一个函数里面，只能执行一次（或者说一个）"),e("code",[t._v("return")]),t._v(" 语句，但是可以执行多次（或者说多个）"),e("code",[t._v("yield")]),t._v(" 表达式。")]),t._v(" "),e("li",[e("strong",[t._v("返回次数")]),t._v("：正常函数只能返回一个值，因为只能执行一次 "),e("code",[t._v("return")]),t._v(" ；Generator 函数可以返回一系列的值，因为可以有任意多个"),e("code",[t._v("yield")]),t._v("。从另一个角度看，也可以说 Generator 生成了一系列的值，这也就是它的名称的来历。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"暂缓执行函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂缓执行函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 暂缓执行函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Generator 函数可以不用 "),s("code",[this._v("yield")]),this._v(" 表达式，这时就变成了一个单纯的"),s("strong",[this._v("暂缓执行函数")]),this._v("。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'执行了！'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" generator "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  generator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("上面代码中，函数 "),e("code",[t._v("fn")]),t._v(" 如果是普通函数，在为变量 "),e("code",[t._v("generator")]),t._v(" 赋值时就会执行。但是，函数 "),e("code",[t._v("fn")]),t._v(" 是一个 Generator 函数，就变成只有调用 "),e("code",[t._v("next")]),t._v(" 方法时，函数 "),e("code",[t._v("fn")]),t._v(" 才会执行。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"表达式规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 表达式规范")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("另外需要注意，"),s("strong",[s("code",[this._v("yield")]),this._v(" 表达式只能用在 Generator 函数里面")]),this._v("，用在其他地方都会报错。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SyntaxError: Unexpected number")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面代码在一个普通函数中使用 "),s("code",[this._v("yield")]),this._v(" 表达式，结果产生一个句法错误。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"嵌套表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 嵌套表达式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("yield")]),this._v(" 表达式如果用在另一个表达式之中，必须放在"),s("strong",[this._v("圆括号")]),this._v("里面。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SyntaxError")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SyntaxError")]),t._v("\n\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("yield")]),this._v(" 表达式用作"),s("strong",[this._v("函数参数")]),this._v("或放在"),s("strong",[this._v("赋值表达式")]),this._v("的右边，可以不加括号。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" input "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"原型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 原型方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("Generator.prototype.next")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("原型方法共同点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("三者的作用都是让 Generator 函数恢复执行，并且使用不同的语句替换 "),s("code",[this._v("yield")]),this._v(" 表达式。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("next()")]),this._v(" 是将 "),s("code",[this._v("yield")]),this._v(" 表达式替换成一个值。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("generator")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gen "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("generator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object {value: 3, done: false}")]),t._v("\n\ngen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object {value: 1, done: true}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于将 let result = yield x + y")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换成 let result = 1;")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("上面代码中，第二个 "),e("code",[t._v("next(1)")]),t._v(" 方法就相当于将 "),e("code",[t._v("yield")]),t._v(" 表达式替换成一个值 "),e("code",[t._v("1")]),t._v("。如果 "),e("code",[t._v("next")]),t._v(" 方法没有参数，就相当于替换成 "),e("code",[t._v("undefined")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("throw()")]),this._v(" 是将 "),s("code",[this._v("yield")]),this._v(" 表达式替换成一个 "),s("code",[this._v("throw")]),this._v(" 语句。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("gen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'出错了'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught Error: 出错了")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于将 let result = yield x + y")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换成 let result = throw(new Error('出错了'));")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("return()")]),this._v(" 是将 "),s("code",[this._v("yield")]),this._v(" 表达式替换成一个 "),s("code",[this._v("return")]),this._v(" 语句。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("gen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object {value: 2, done: true}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于将 let result = yield x + y")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换成 let result = return 2;")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"作为对象的函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为对象的函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 作为对象的函数")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("generator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ···")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上面代码中，"),s("code",[this._v("generator")]),this._v(" 属性前面有一个星号，表示这个属性是一个 Generator 函数。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myGeneratorMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ···")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"判断方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 判断方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("生成器对象的判断方法")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGenerator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("throw "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("生成器函数的判断方法")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGeneratorFunction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" constructor "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("constructor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GeratorFunction'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" constructor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GeneratorFunction'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" constructor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("displayName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGenerator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("利用函数的 "),e("code",[t._v("constructor")]),t._v(" 构造器的名字来判断，为了兼容性使用 "),e("code",[t._v("name")]),t._v(" 与 "),e("code",[t._v("displayName")]),t._v(" 两个属性来进行判断. 这里递归调用 "),e("code",[t._v("isGenerator")]),t._v(" 判断 "),e("code",[t._v("constructor")]),t._v(" 的原型是因为有自定义迭代器的存在。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("参考书籍：")])])}],!1,null,null,null);s.default=a.exports}}]);